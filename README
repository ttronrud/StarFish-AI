SFAI Library and Console Program:

This project is split into three segments - the ipynb used to generate the trained network model,
the SFAI DLL, and the SFAIC console app used to test the library.

This project requires the frugally-deep project downloaded from vcpkg.

Instructions:
1. Download the vcpkg repo with git clone https://github.com/microsoft/vcpkg
2. Run the bootstrap-vcpkg.bat file inside the vcpkg directory
3. Install the fdeep package with: vcpkg install frugally-deep
3.5: Default is x86!! Make sure your project is also x86
4. Point either VS or CLion (or whatever IDE) to the CMake toolchain file: [vcpkg install]\scripts\buildsystems\vcpkg.cmake
5. It should compile now!
6. Use the DeepQRS notebook to train and save the model (if you have ECG data)
7. Inside frugally deep, use frugally-deep/keras_export/convert_model.py to generate the json model
8. For execution, move fdeep_model.json and test_dat_good.txt to the output directory (where SFAIC.exe is located)

SFAI Library:
The SFAI library consists of the library.cpp/h, and SFAI_CAPI.cpp/h. The CAPI class exposes the "CalcAll" method
in the generated DLL. This method takes in a flat array of 4-byte floats (requires multiples of 2160, which is the
network's input width), the number of chunks to expect, and two non-null pointers for the array of chunk values and
the number of returned chunks.

SFAIC console app:
The SFAIC app uses the DLL generated by the SFAI library project and executes the CalcAll method on input files
defined by the command line arguments.

Use as an external library (DLL):
SFAI_Interface.cs demonstrates an implementation of SFAI.DLL as an external library in a DotNet file. SFAI_Interface.cs
can be bundled with SFAI.DLL to be inserted into C# projects and implemented directly.
